{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/Pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport logo from \"../assets/images/logo2.png\";\nimport firebase from \"../utils/firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  // react-hook-forms\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); // login with firebase\n\n  const onSubmitLogin = data => {\n    console.log(data);\n    firebase.auth().signInWithEmailAndPassword(data.username, data.password).then(userCredential => {\n      // Signed in \n      const userlogin = userCredential.user;\n      console.log(userL);\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [userLogin && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"'je suis connecter'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo-login\",\n        src: logo,\n        alt: \"logo de Hrnet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmitLogin),\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-login-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"username\", {\n                required: true\n              }),\n              type: \"text\",\n              id: \"username\",\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"username\",\n              message: \"Username is required\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_message\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-login-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n                required: true\n              }),\n              type: \"password\",\n              id: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"password\",\n              message: \"Password is required\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_message\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-btn\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"qWbROvonVtSc/QveKBps0IehkRY=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/Pages/Login.jsx"],"names":["React","useEffect","useRef","useState","useForm","Controller","ErrorMessage","logo","firebase","Login","register","handleSubmit","formState","errors","onSubmitLogin","data","console","log","auth","signInWithEmailAndPassword","username","password","then","userCredential","userlogin","user","userL","catch","error","errorCode","code","errorMessage","message","userLogin","required"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport logo from \"../assets/images/logo2.png\";\nimport firebase from \"../utils/firebaseConfig\";\n\n\n\nconst Login = () => {\n// react-hook-forms\nconst {\n    register,\n    handleSubmit,\n    formState: { errors },\n\n  } = useForm();\n\n// login with firebase\n   const onSubmitLogin = (data) => {\n     console.log(data);\n    firebase.auth().signInWithEmailAndPassword(data.username,data.password)\n    .then((userCredential) => {\n      // Signed in \n      const userlogin = userCredential.user;\n      console.log(userL)\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n \n  \n   \n  };\n\n  \n\n\n    return (\n\n      <>\n      {userLogin && <span>'je suis connecter'</span>}\n      <div className='wrapper-login'>\n        <img className=\"logo-login\" src={logo} alt=\"logo de Hrnet\" />\n        <form onSubmit={handleSubmit(onSubmitLogin)} className=\"login-container\">\n        <div className=\"header\">\n          Login\n        </div>\n        <div className=\"box\">\n\n          <div className=\"input-login-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n                {...register(\"username\", { required: true })}\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n              />\n                 <ErrorMessage\n                errors={errors}\n                name=\"username\"\n                message=\"Username is required\"\n                render={({ message }) => (\n                  <span className=\"error_message\">{message}</span>\n                )}\n              />\n          </div>\n\n          <div className=\"input-login-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n                {...register(\"password\", { required: true })}\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n              />\n                <ErrorMessage\n                errors={errors}\n                name=\"password\"\n                message=\"Password is required\"\n                render={({ message }) => (\n                  <span className=\"error_message\">{message}</span>\n                )}\n              />\n          </div>\n\n          <button\n            className=\"login-btn\"\n            >Login</button>\n        </div>\n      </form>\n      </div>\n      </>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}
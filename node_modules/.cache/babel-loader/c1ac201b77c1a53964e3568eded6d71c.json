{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormsEmployee = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors,\n    setError,\n    control\n  } = useForm();\n\n  const createEmployee = inputData => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n    const employee = {\n      birthDate: inputData.birthDate.getFullYear(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      startDate: inputData.startDate.getDate(),\n      states: inputData.states,\n      street: inputData.street,\n      zipCode: inputData.zipCode\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = data => {\n    createEmployee(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        action: \"#\",\n        id: \"create-employee\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left_form_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"firstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\"),\n              type: \"text\",\n              id: \"firstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"lastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\"),\n              type: \"text\",\n              id: \"lastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"birthDate\",\n                children: \"Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"birthDate\",\n                defaultValue: null,\n                control: control,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  }\n                }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                  placeholderText: \"Select BirthDay\",\n                  selected: value,\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"startDate\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"startDate\",\n                defaultValue: null,\n                control: control,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  }\n                }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                  selected: value,\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right_form_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              class: \"address\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"street\",\n                children: \"Street\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"street\"),\n                id: \"street\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"city\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\"),\n                id: \"city\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"states\",\n                children: \"States\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: \"states\",\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(Select, {\n                  defaultValue: states[0],\n                  inputRef: ref,\n                  styles: customStyles,\n                  options: states,\n                  value: states.find(c => c.abbreviation === states.abbreviation),\n                  onChange: val => onChange(val.abbreviation)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"zipCode\",\n                children: \"Zip Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"zipCode\"),\n                id: \"zip-code\",\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"department\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"department\",\n              render: ({\n                field: {\n                  onChange,\n                  value,\n                  ref\n                }\n              }) => /*#__PURE__*/_jsxDEV(Select, {\n                defaultValue: department[0],\n                inputRef: ref,\n                styles: customStyles,\n                options: department,\n                value: department.find(c => c.value === value),\n                onChange: val => onChange(val.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Save Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormsEmployee, \"rCVrEC5yZAc1/WUEOiqHMgId2OA=\", false, function () {\n  return [useForm];\n});\n\n_c = FormsEmployee;\nexport default FormsEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsEmployee\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx"],"names":["React","useForm","Controller","DatePicker","states","department","Select","customStyles","firebase","FormsEmployee","register","handleSubmit","formState","errors","setError","control","createEmployee","inputData","employeeDB","database","ref","employee","birthDate","getFullYear","city","firstName","lastName","startDate","getDate","street","zipCode","push","onSubmit","data","field","onChange","value","find","c","abbreviation","val"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\n\nconst FormsEmployee = () => {\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors,\n    setError,\n    control,\n  } = useForm();\n\n  const createEmployee = (inputData) => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n\n    const employee = {\n      birthDate: inputData.birthDate.getFullYear(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      startDate: inputData.startDate.getDate(),\n      states: inputData.states,\n      street: inputData.street,\n      zipCode: inputData.zipCode,\n    };\n    employeeDB.push(employee);\n  };\n\n\n\n  const onSubmit = (data) => {\n  createEmployee(data)\n \n  }\n  \n\n\n  return (\n    <>\n      <div class=\"container\">\n  \n     <form onSubmit={handleSubmit(onSubmit)} action=\"#\" id=\"create-employee\">\n       <div className=\"container_form\">\n        <div className=\"left_form_container\">\n          <label for=\"firstName\">First Name</label>\n          <input {...register(\"firstName\")} type=\"text\" id=\"firstName\" />\n\n          <label for=\"lastName\">Last Name</label>\n          <input {...register(\"lastName\")} type=\"text\" id=\"lastName\" />\n\n          <div className=\"container-picker\">\n            <label for=\"birthDate\">Date of Birth</label>\n\n            <Controller\n              name=\"birthDate\"\n              defaultValue={null}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <DatePicker\n                  placeholderText=\"Select BirthDay\"\n                  selected={value}\n                  onChange={onChange}\n                />\n              )}\n            />\n          </div>\n          <div className=\"container-picker\">\n            <label for=\"startDate\">Start Date</label>\n\n            <Controller\n              name=\"startDate\"\n              defaultValue={null}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <DatePicker\n                  \n                  selected={value}\n                  onChange={onChange}\n                />\n              )}\n            />\n          </div>\n         \n          </div>\n          <div className=\"right_form_container\">\n          <fieldset class=\"address\">\n            <legend>Address</legend>\n\n            <label for=\"street\">Street</label>\n            <input {...register(\"street\")} id=\"street\" type=\"text\" />\n\n            <label for=\"city\">City</label>\n            <input {...register(\"city\")} id=\"city\" type=\"text\" />\n\n            <label for=\"states\">States</label>\n            <Controller\n              control={control}\n              name=\"states\"\n              render={({ field: { onChange, value, ref } }) => (\n                <Select\n                  defaultValue={states[0]}\n                  inputRef={ref}\n                  styles={customStyles}\n                  options={states}\n                  value={states.find(\n                    (c) => c.abbreviation === states.abbreviation\n                  )}\n                  onChange={(val) => onChange(val.abbreviation)}\n                />\n              )}\n            />\n\n            <label for=\"zipCode\">Zip Code</label>\n            <input {...register(\"zipCode\")} id=\"zip-code\" type=\"number\" />\n          </fieldset>\n\n          <label for=\"department\">Department</label>\n          <Controller\n            control={control}\n            name=\"department\"\n            render={({ field: { onChange, value, ref } }) => (\n              <Select\n                defaultValue={department[0]}\n                inputRef={ref}\n                styles={customStyles}\n                options={department}\n                value={department.find((c) => c.value === value)}\n                onChange={(val) => onChange(val.value)}\n              />\n            )}\n          />\n\n        \n          \n          </div>\n           </div>\n           <button>Save Employee</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default FormsEmployee;\n"]},"metadata":{},"sourceType":"module"}
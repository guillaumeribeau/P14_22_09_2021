{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/TableEmployee.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../utils/firebaseConfig';\nimport { useTable } from 'react-table';\nimport columns from '../data/table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TableEmployee = () => {\n  _s();\n\n  const [table, setTable] = useState([]);\n  useEffect(() => {\n    const tableDB = firebase.database().ref('create-employee');\n    tableDB.on('value', snapshot => {\n      let previousTable = snapshot.val();\n      let list = [];\n\n      for (let id in previousTable) {\n        list.push({\n          id,\n          ...previousTable[id]\n        });\n      }\n\n      console.log(list);\n      setTable(list);\n    });\n  }, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    table\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableEmployee, \"P8DXg8zc5tAdIHdclPg2eu6fmHY=\", false, function () {\n  return [useTable];\n});\n\n_c = TableEmployee;\nexport default TableEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableEmployee\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/TableEmployee.jsx"],"names":["React","useEffect","useState","firebase","useTable","columns","TableEmployee","table","setTable","tableDB","database","ref","on","snapshot","previousTable","val","list","id","push","console","log","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AAGAD,EAAAA,SAAS,CAAC,MAAK;AAEf,UAAMQ,OAAO,GAAEN,QAAQ,CAACO,QAAT,GAAoBC,GAApB,CAAwB,iBAAxB,CAAf;AAEAF,IAAAA,OAAO,CAACG,EAAR,CAAW,OAAX,EAAqBC,QAAD,IAAY;AAC9B,UAAIC,aAAa,GAAED,QAAQ,CAACE,GAAT,EAAnB;AACA,UAAIC,IAAI,GAAC,EAAT;;AACA,WAAK,IAAIC,EAAT,IAAeH,aAAf,EAA6B;AAC3BE,QAAAA,IAAI,CAACE,IAAL,CAAU;AAACD,UAAAA,EAAD;AAAK,aAAGH,aAAa,CAACG,EAAD;AAArB,SAAV;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAR,MAAAA,QAAQ,CAACQ,IAAD,CAAR;AACD,KARD;AASC,GAbQ,EAaP,EAbO,CAAT;AAgBA,QAAM;AACFK,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMArB,QAAQ,CAAC;AACXC,IAAAA,OADW;AAEXE,IAAAA;AAFW,GAAD,CANd;AAWE,sBACE,sBAAWc,aAAa,EAAxB;AAAA,4BACE;AAAA,gBACGE,YAAY,CAACG,GAAb,CAAiBC,WAAW,iBAC3B,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC7B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,oBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,sBAAWV,iBAAiB,EAA5B;AAAA,gBACGE,IAAI,CAACE,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;AACpBT,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,4BACE,mBAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA,oBACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAcW,IAAI,IAAI;AACrB,gCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,wBAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BL,CA3DD;;GAAM1B,a;UA2BIF,Q;;;KA3BJE,a;AA6DN,eAAeA,aAAf","sourcesContent":["import React, {useEffect,useState} from 'react';\nimport firebase from '../utils/firebaseConfig';\nimport {useTable} from 'react-table'\nimport columns from '../data/table'\n\nconst TableEmployee = () => {\n\n    const [table, setTable]= useState([]);\n\n\n    useEffect(()=> {\n    \n    const tableDB= firebase.database().ref('create-employee')\n    \n    tableDB.on('value', (snapshot)=>{\n      let previousTable= snapshot.val()\n      let list=[];\n      for (let id in previousTable){\n        list.push({id, ...previousTable[id]})\n      }\n      console.log(list)\n      setTable(list)\n    })\n    },[])\n    \n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n      } = useTable({\n        columns,\n        table,\n      });\n    \n      return (\n        <table {...getTableProps()}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      );\n    \n\n};\n\nexport default TableEmployee;"]},"metadata":{},"sourceType":"module"}
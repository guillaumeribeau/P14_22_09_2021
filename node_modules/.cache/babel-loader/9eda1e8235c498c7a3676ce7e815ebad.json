{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/Pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport logo from \"../assets/images/logo2.png\";\nimport firebase from \"../utils/firebaseConfig\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmitLogin = data => {\n    firebase.auth();\n    signInWithEmailAndPassword();\n    console.log(data);\n  };\n\n  const signInWithEmailAndPassword = async (email, password) => {\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper-login\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"logo-login\",\n      src: logo,\n      alt: \"logo de Hrnet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmitLogin),\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-login-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"username\", {\n              required: true\n            }),\n            type: \"text\",\n            id: \"username\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            errors: errors,\n            name: \"username\",\n            message: \"Username is required\",\n            render: ({\n              message\n            }) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_message\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-login-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n              required: true\n            }),\n            type: \"password\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            errors: errors,\n            name: \"password\",\n            message: \"Password is required\",\n            render: ({\n              message\n            }) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error_message\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-btn\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Login, \"qWbROvonVtSc/QveKBps0IehkRY=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/Pages/Login.jsx"],"names":["React","useEffect","useRef","useState","useForm","Controller","ErrorMessage","logo","firebase","signInWithEmailAndPassword","Login","register","handleSubmit","formState","errors","onSubmitLogin","data","auth","console","log","email","password","err","error","alert","message","required"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport logo from \"../assets/images/logo2.png\";\nimport firebase from \"../utils/firebaseConfig\";\nimport {  signInWithEmailAndPassword } from \"firebase/auth\";\n\n\nconst Login = () => {\n\nconst {\n    register,\n    handleSubmit,\n    formState: { errors },\n\n  } = useForm();\n\n  const onSubmitLogin = (data) => {\n    firebase.auth()\n    signInWithEmailAndPassword()\n    console.log(data);\n   \n  };\n\n  \n  const signInWithEmailAndPassword = async (email, password) => {\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n    } catch (err) {\n      console.error(err);\n      alert(err.message);\n    }\n  };\n\n    return (\n      \n      <div className='wrapper-login'>\n        <img className=\"logo-login\" src={logo} alt=\"logo de Hrnet\" />\n        <form onSubmit={handleSubmit(onSubmitLogin)} className=\"login-container\">\n        <div className=\"header\">\n          Login\n        </div>\n        <div className=\"box\">\n\n          <div className=\"input-login-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n                {...register(\"username\", { required: true })}\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n              />\n                 <ErrorMessage\n                errors={errors}\n                name=\"username\"\n                message=\"Username is required\"\n                render={({ message }) => (\n                  <span className=\"error_message\">{message}</span>\n                )}\n              />\n          </div>\n\n          <div className=\"input-login-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n                {...register(\"password\", { required: true })}\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n              />\n                <ErrorMessage\n                errors={errors}\n                name=\"password\"\n                message=\"Password is required\"\n                render={({ message }) => (\n                  <span className=\"error_message\">{message}</span>\n                )}\n              />\n          </div>\n\n          <button\n            className=\"login-btn\"\n            >Login</button>\n        </div>\n      </form>\n      </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}
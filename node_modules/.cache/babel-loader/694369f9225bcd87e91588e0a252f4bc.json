{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { Modal } from \"gr-react-modal\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./Select/SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\nimport gsap from \"gsap\";\nimport employee from \"../assets/images/employee.png\";\nimport document from \"../assets/images/document.png\";\nimport { customButton, customContent } from './modale/CustomModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormsEmployee = () => {\n  _s();\n\n  // Ã©tat de la modale\n  const [active, setActive] = useState(false);\n\n  const close = () => {\n    setActive(!active);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm();\n\n  const createEmployee = inputData => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n    const employee = {\n      birthDate: inputData.birthDate.toLocaleDateString(),\n      startDate: inputData.startDate.toLocaleDateString(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      states: inputData.states,\n      street: inputData.street,\n      zipCode: inputData.zipCode\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n    createEmployee(data);\n    setActive(true);\n  }; // animation forms\n\n\n  const leftforms = useRef(null);\n  const rightforms = useRef(null);\n  const button = useRef(null);\n  const documentImg = useRef(null);\n  useEffect(() => {\n    gsap.from(leftforms.current, {\n      x: \"-250%\",\n      delay: 1,\n      duration: 1\n    });\n    gsap.from(rightforms.current, {\n      x: \"250%\",\n      delay: 1,\n      duration: 1\n    });\n    gsap.from(button.current, {\n      y: \"-250%\",\n      delay: 1,\n      duration: 1\n    });\n    gsap.to(documentImg.current, {\n      delay: 3,\n      y: \"500px\",\n      duration: 3\n    });\n    gsap.to(documentImg.current, {\n      delay: 6,\n      x: \"-520px\",\n      duration: 3,\n      opacity: 0\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        action: \"#\",\n        id: \"create-employee\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: leftforms,\n            className: \"left_form_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"firstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n                required: true\n              }),\n              type: \"text\",\n              id: \"firstName\",\n              name: \"firstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"firstName\",\n              message: \"Firstname is required\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_message\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"lastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n                required: true\n              }),\n              type: \"text\",\n              id: \"lastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"lastName\",\n              message: \"Lastname is required\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_message\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"birthDate\",\n                children: \"Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"birthDate\",\n                defaultValue: null,\n                control: control,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  }\n                }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                  required: true,\n                  name: \"birthDate\",\n                  selected: value,\n                  onChange: onChange,\n                  showYearDropdown: true,\n                  peekNextMonth: true,\n                  showMonthDropdown: true,\n                  dropdownMode: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"startDate\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"startDate\",\n                defaultValue: null,\n                control: control,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  }\n                }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                  required: true,\n                  selected: value,\n                  onChange: onChange,\n                  showYearDropdown: true,\n                  peekNextMonth: true,\n                  showMonthDropdown: true,\n                  dropdownMode: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: employee,\n              alt: \"employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right_form_container\",\n            ref: rightforms,\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              class: \"address\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"street\",\n                children: \"Street\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"street\", {\n                  required: true\n                }),\n                id: \"street\",\n                name: \"street\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                errors: errors,\n                name: \"street\",\n                message: \"Street is required\",\n                render: ({\n                  message\n                }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_message\",\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"city\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\", {\n                  required: true\n                }),\n                id: \"city\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                errors: errors,\n                name: \"city\",\n                message: \"City is required\",\n                render: ({\n                  message\n                }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_message\",\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"states\",\n                children: \"States\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: \"states\",\n                defaultValue: states[0].value,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(Select, {\n                  inputRef: ref,\n                  styles: customStyles,\n                  options: states,\n                  value: states.find(c => c.value === value),\n                  onChange: val => onChange(val.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"zipCode\",\n                children: \"Zip Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"zipCode\", {\n                  required: true\n                }),\n                id: \"zip-code\",\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                errors: errors,\n                name: \"zipCode\",\n                message: \"Zip code is required\",\n                render: ({\n                  message\n                }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_message\",\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"department\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"department\",\n              defaultValue: department[0].value,\n              render: ({\n                field: {\n                  onChange,\n                  value,\n                  ref\n                }\n              }) => /*#__PURE__*/_jsxDEV(Select, {\n                inputRef: ref,\n                styles: customStyles,\n                options: department,\n                value: department.find(c => c.value === value),\n                onChange: val => onChange(val.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"document_icons\",\n            ref: documentImg,\n            src: document,\n            alt: \"document icons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: button,\n          children: \"Save Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        close: close,\n        open: active,\n        showClose: true,\n        modalContent: \" A new Employee is created !\",\n        styleButton: customButton,\n        styleContent: customContent,\n        out: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormsEmployee, \"4faNa7n0BVcbO2zWGCFh8TgrWKc=\", false, function () {\n  return [useForm];\n});\n\n_c = FormsEmployee;\nexport default FormsEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsEmployee\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx"],"names":["React","useEffect","useRef","useState","useForm","Controller","ErrorMessage","Modal","DatePicker","states","department","Select","customStyles","firebase","gsap","employee","document","customButton","customContent","FormsEmployee","active","setActive","close","register","handleSubmit","formState","errors","control","createEmployee","inputData","employeeDB","database","ref","birthDate","toLocaleDateString","startDate","city","firstName","lastName","street","zipCode","push","onSubmit","data","console","log","leftforms","rightforms","button","documentImg","from","current","x","delay","duration","y","to","opacity","required","message","field","onChange","value","find","c","val"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,sBAA1C;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMmB,KAAK,GAAG,MAAM;AAClBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,QAAM;AACJG,IAAAA,QADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAHP;AAKJC,IAAAA;AALI,MAMFvB,OAAO,EANX;;AAQA,QAAMwB,cAAc,GAAIC,SAAD,IAAe;AACpC,UAAMC,UAAU,GAAGjB,QAAQ,CAACkB,QAAT,GAAoBC,GAApB,CAAwB,iBAAxB,CAAnB;AAEA,UAAMjB,QAAQ,GAAG;AACfkB,MAAAA,SAAS,EAAEJ,SAAS,CAACI,SAAV,CAAoBC,kBAApB,EADI;AAEfC,MAAAA,SAAS,EAAEN,SAAS,CAACM,SAAV,CAAoBD,kBAApB,EAFI;AAGfE,MAAAA,IAAI,EAAEP,SAAS,CAACO,IAHD;AAIf1B,MAAAA,UAAU,EAAEmB,SAAS,CAACnB,UAJP;AAKf2B,MAAAA,SAAS,EAAER,SAAS,CAACQ,SALN;AAMfC,MAAAA,QAAQ,EAAET,SAAS,CAACS,QANL;AAOf7B,MAAAA,MAAM,EAAEoB,SAAS,CAACpB,MAPH;AAQf8B,MAAAA,MAAM,EAAEV,SAAS,CAACU,MARH;AASfC,MAAAA,OAAO,EAAEX,SAAS,CAACW;AATJ,KAAjB;AAWAV,IAAAA,UAAU,CAACW,IAAX,CAAgB1B,QAAhB;AACD,GAfD;;AAiBA,QAAM2B,QAAQ,GAAIC,IAAD,IAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAf,IAAAA,cAAc,CAACe,IAAD,CAAd;AACAtB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAJD,CAlC0B,CAwC1B;;;AACA,QAAMyB,SAAS,GAAG5C,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM6C,UAAU,GAAG7C,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM8C,MAAM,GAAG9C,MAAM,CAAC,IAAD,CAArB;AACA,QAAM+C,WAAW,GAAG/C,MAAM,CAAC,IAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,IAAI,CAACoC,IAAL,CAAUJ,SAAS,CAACK,OAApB,EAA6B;AAC3BC,MAAAA,CAAC,EAAE,OADwB;AAE3BC,MAAAA,KAAK,EAAE,CAFoB;AAG3BC,MAAAA,QAAQ,EAAE;AAHiB,KAA7B;AAMAxC,IAAAA,IAAI,CAACoC,IAAL,CAAUH,UAAU,CAACI,OAArB,EAA8B;AAC5BC,MAAAA,CAAC,EAAE,MADyB;AAE5BC,MAAAA,KAAK,EAAE,CAFqB;AAG5BC,MAAAA,QAAQ,EAAE;AAHkB,KAA9B;AAKAxC,IAAAA,IAAI,CAACoC,IAAL,CAAUF,MAAM,CAACG,OAAjB,EAA0B;AACxBI,MAAAA,CAAC,EAAE,OADqB;AAExBF,MAAAA,KAAK,EAAE,CAFiB;AAGxBC,MAAAA,QAAQ,EAAE;AAHc,KAA1B;AAKAxC,IAAAA,IAAI,CAAC0C,EAAL,CAAQP,WAAW,CAACE,OAApB,EAA6B;AAC3BE,MAAAA,KAAK,EAAE,CADoB;AAE3BE,MAAAA,CAAC,EAAE,OAFwB;AAG3BD,MAAAA,QAAQ,EAAE;AAHiB,KAA7B;AAKAxC,IAAAA,IAAI,CAAC0C,EAAL,CAAQP,WAAW,CAACE,OAApB,EAA6B;AAC3BE,MAAAA,KAAK,EAAE,CADoB;AAE3BD,MAAAA,CAAC,EAAE,QAFwB;AAG3BE,MAAAA,QAAQ,EAAE,CAHiB;AAI3BG,MAAAA,OAAO,EAAE;AAJkB,KAA7B;AAMD,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAEjC,YAAY,CAACkB,QAAD,CAA5B;AAAwC,QAAA,MAAM,EAAC,GAA/C;AAAmD,QAAA,EAAE,EAAC,iBAAtD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEI,SAAV;AAAqB,YAAA,SAAS,EAAC,qBAA/B;AAAA,oCACE;AAAO,cAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,sBACMvB,QAAQ,CAAC,WAAD,EAAc;AAAEmC,gBAAAA,QAAQ,EAAE;AAAZ,eAAd,CADd;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,EAAE,EAAC,WAHL;AAIE,cAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE,QAAC,YAAD;AACE,cAAA,MAAM,EAAEhC,MADV;AAEE,cAAA,IAAI,EAAC,WAFP;AAGE,cAAA,OAAO,EAAC,uBAHV;AAIE,cAAA,MAAM,EAAE,CAAC;AAAEiC,gBAAAA;AAAF,eAAD,kBACN;AAAM,gBAAA,SAAS,EAAC,eAAhB;AAAA,0BAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,oBARF,eAiBE;AAAO,cAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBF,eAkBE,sBACMpC,QAAQ,CAAC,UAAD,EAAa;AAAEmC,gBAAAA,QAAQ,EAAE;AAAZ,eAAb,CADd;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,EAAE,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAuBE,QAAC,YAAD;AACE,cAAA,MAAM,EAAEhC,MADV;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,OAAO,EAAC,sBAHV;AAIE,cAAA,MAAM,EAAE,CAAC;AAAEiC,gBAAAA;AAAF,eAAD,kBACN;AAAM,gBAAA,SAAS,EAAC,eAAhB;AAAA,0BAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,oBAvBF,eAgCE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACE;AAAO,gBAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE,QAAC,UAAD;AACE,gBAAA,IAAI,EAAC,WADP;AAEE,gBAAA,YAAY,EAAE,IAFhB;AAGE,gBAAA,OAAO,EAAEhC,OAHX;AAIE,gBAAA,MAAM,EAAE,CAAC;AAAEiC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,QAAF;AAAYC,oBAAAA;AAAZ;AAAT,iBAAD,kBACN,QAAC,UAAD;AACE,kBAAA,QAAQ,MADV;AAEE,kBAAA,IAAI,EAAC,WAFP;AAGE,kBAAA,QAAQ,EAAEA,KAHZ;AAIE,kBAAA,QAAQ,EAAED,QAJZ;AAKE,kBAAA,gBAAgB,MALlB;AAME,kBAAA,aAAa,MANf;AAOE,kBAAA,iBAAiB,MAPnB;AAQE,kBAAA,YAAY,EAAC;AARf;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhCF,eAqDE;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,sCACE;AAAO,gBAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE,QAAC,UAAD;AACE,gBAAA,IAAI,EAAC,WADP;AAEE,gBAAA,YAAY,EAAE,IAFhB;AAGE,gBAAA,OAAO,EAAElC,OAHX;AAIE,gBAAA,MAAM,EAAE,CAAC;AAAEiC,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,QAAF;AAAYC,oBAAAA;AAAZ;AAAT,iBAAD,kBACN,QAAC,UAAD;AACE,kBAAA,QAAQ,MADV;AAEE,kBAAA,QAAQ,EAAEA,KAFZ;AAGE,kBAAA,QAAQ,EAAED,QAHZ;AAIE,kBAAA,gBAAgB,MAJlB;AAKE,kBAAA,aAAa,MALf;AAME,kBAAA,iBAAiB,MANnB;AAOE,kBAAA,YAAY,EAAC;AAPf;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBArDF,eAyEE;AAAK,cAAA,GAAG,EAAE9C,QAAV;AAAoB,cAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAzEF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA6EE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAsC,YAAA,GAAG,EAAEgC,UAA3C;AAAA,oCACE;AAAU,cAAA,KAAK,EAAC,SAAhB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE;AAAO,gBAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,sBACMxB,QAAQ,CAAC,QAAD,EAAW;AAAEmC,kBAAAA,QAAQ,EAAE;AAAZ,iBAAX,CADd;AAEE,gBAAA,EAAE,EAAC,QAFL;AAGE,gBAAA,IAAI,EAAC,QAHP;AAIE,gBAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,sBAJF,eAUE,QAAC,YAAD;AACE,gBAAA,MAAM,EAAEhC,MADV;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,OAAO,EAAC,oBAHV;AAIE,gBAAA,MAAM,EAAE,CAAC;AAAEiC,kBAAAA;AAAF,iBAAD,kBACN;AAAM,kBAAA,SAAS,EAAC,eAAhB;AAAA,4BAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBAVF,eAmBE;AAAO,gBAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBF,eAoBE,sBACMpC,QAAQ,CAAC,MAAD,EAAS;AAAEmC,kBAAAA,QAAQ,EAAE;AAAZ,iBAAT,CADd;AAEE,gBAAA,EAAE,EAAC,MAFL;AAGE,gBAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,sBApBF,eAyBE,QAAC,YAAD;AACE,gBAAA,MAAM,EAAEhC,MADV;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,OAAO,EAAC,kBAHV;AAIE,gBAAA,MAAM,EAAE,CAAC;AAAEiC,kBAAAA;AAAF,iBAAD,kBACN;AAAM,kBAAA,SAAS,EAAC,eAAhB;AAAA,4BAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBAzBF,eAkCE;AAAO,gBAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlCF,eAmCE,QAAC,UAAD;AACE,gBAAA,OAAO,EAAEhC,OADX;AAEE,gBAAA,IAAI,EAAC,QAFP;AAGE,gBAAA,YAAY,EAAElB,MAAM,CAAC,CAAD,CAAN,CAAUqD,KAH1B;AAIE,gBAAA,MAAM,EAAE,CAAC;AAAEF,kBAAAA,KAAK,EAAE;AAAEC,oBAAAA,QAAF;AAAYC,oBAAAA,KAAZ;AAAmB9B,oBAAAA;AAAnB;AAAT,iBAAD,kBACN,QAAC,MAAD;AACE,kBAAA,QAAQ,EAAEA,GADZ;AAEE,kBAAA,MAAM,EAAEpB,YAFV;AAGE,kBAAA,OAAO,EAAEH,MAHX;AAIE,kBAAA,KAAK,EAAEA,MAAM,CAACsD,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACF,KAAF,KAAYA,KAA/B,CAJT;AAKE,kBAAA,QAAQ,EAAGG,GAAD,IAASJ,QAAQ,CAACI,GAAG,CAACH,KAAL;AAL7B;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBAnCF,eAkDE;AAAO,gBAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlDF,eAmDE,sBACMvC,QAAQ,CAAC,SAAD,EAAY;AAAEmC,kBAAAA,QAAQ,EAAE;AAAZ,iBAAZ,CADd;AAEE,gBAAA,EAAE,EAAC,UAFL;AAGE,gBAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,sBAnDF,eAwDE,QAAC,YAAD;AACE,gBAAA,MAAM,EAAEhC,MADV;AAEE,gBAAA,IAAI,EAAC,SAFP;AAGE,gBAAA,OAAO,EAAC,sBAHV;AAIE,gBAAA,MAAM,EAAE,CAAC;AAAEiC,kBAAAA;AAAF,iBAAD,kBACN;AAAM,kBAAA,SAAS,EAAC,eAAhB;AAAA,4BAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,sBAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAmEE;AAAO,cAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnEF,eAoEE,QAAC,UAAD;AACE,cAAA,OAAO,EAAEhC,OADX;AAEE,cAAA,IAAI,EAAC,YAFP;AAGE,cAAA,YAAY,EAAEjB,UAAU,CAAC,CAAD,CAAV,CAAcoD,KAH9B;AAIE,cAAA,MAAM,EAAE,CAAC;AAAEF,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,QAAF;AAAYC,kBAAAA,KAAZ;AAAmB9B,kBAAAA;AAAnB;AAAT,eAAD,kBACN,QAAC,MAAD;AACE,gBAAA,QAAQ,EAAEA,GADZ;AAEE,gBAAA,MAAM,EAAEpB,YAFV;AAGE,gBAAA,OAAO,EAAEF,UAHX;AAIE,gBAAA,KAAK,EAAEA,UAAU,CAACqD,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACF,KAAF,KAAYA,KAAnC,CAJT;AAKE,gBAAA,QAAQ,EAAGG,GAAD,IAASJ,QAAQ,CAACI,GAAG,CAACH,KAAL;AAL7B;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,oBApEF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7EF,eAgKE;AACE,YAAA,SAAS,EAAC,gBADZ;AAEE,YAAA,GAAG,EAAEb,WAFP;AAGE,YAAA,GAAG,EAAEjC,QAHP;AAIE,YAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,kBAhKF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAwKE;AAAS,UAAA,GAAG,EAAEgC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxKF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA6KE,QAAC,KAAD;AACJ,QAAA,KAAK,EAAI1B,KADL;AAEJ,QAAA,IAAI,EAAIF,MAFJ;AAGJ,QAAA,SAAS,EAAI,IAHT;AAIJ,QAAA,YAAY,EAAC,8BAJT;AAKJ,QAAA,WAAW,EAAIH,YALX;AAMJ,QAAA,YAAY,EAAIC,aANZ;AAOJ,QAAA,GAAG;AAPC;AAAA;AAAA;AAAA;AAAA,cA7KF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2LD,CAvQD;;GAAMC,a;UAeAf,O;;;KAfAe,a;AAyQN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { Modal } from \"gr-react-modal\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./Select/SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\nimport gsap from \"gsap\";\nimport employee from \"../assets/images/employee.png\";\nimport document from \"../assets/images/document.png\";\nimport {customButton, customContent} from './modale/CustomModal'\n\nconst FormsEmployee = () => {\n\n  // Ã©tat de la modale\n  const [active, setActive] = useState(false);\n\n  const close = () => {\n    setActive(!active);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n\n    control,\n  } = useForm();\n\n  const createEmployee = (inputData) => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n\n    const employee = {\n      birthDate: inputData.birthDate.toLocaleDateString(),\n      startDate: inputData.startDate.toLocaleDateString(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      states: inputData.states,\n      street: inputData.street,\n      zipCode: inputData.zipCode,\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = (data) => {\n    console.log(data);\n    createEmployee(data);\n    setActive(true)\n  };\n\n  // animation forms\n  const leftforms = useRef(null);\n  const rightforms = useRef(null);\n  const button = useRef(null);\n  const documentImg = useRef(null);\n\n  useEffect(() => {\n    gsap.from(leftforms.current, {\n      x: \"-250%\",\n      delay: 1,\n      duration: 1,\n    });\n\n    gsap.from(rightforms.current, {\n      x: \"250%\",\n      delay: 1,\n      duration: 1,\n    });\n    gsap.from(button.current, {\n      y: \"-250%\",\n      delay: 1,\n      duration: 1,\n    });\n    gsap.to(documentImg.current, {\n      delay: 3,\n      y: \"500px\",\n      duration: 3,\n    });\n    gsap.to(documentImg.current, {\n      delay: 6,\n      x: \"-520px\",\n      duration: 3,\n      opacity: 0,\n    });\n  }, []);\n\n  return (\n    <>\n      <div class=\"container\">\n        <form onSubmit={handleSubmit(onSubmit)} action=\"#\" id=\"create-employee\">\n          <div className=\"container_form\">\n            <div ref={leftforms} className=\"left_form_container\">\n              <label for=\"firstName\">First Name</label>\n              <input\n                {...register(\"firstName\", { required: true })}\n                type=\"text\"\n                id=\"firstName\"\n                name=\"firstName\"\n              />\n              <ErrorMessage\n                errors={errors}\n                name=\"firstName\"\n                message=\"Firstname is required\"\n                render={({ message }) => (\n                  <span className=\"error_message\">{message}</span>\n                )}\n              />\n\n              <label for=\"lastName\">Last Name</label>\n              <input\n                {...register(\"lastName\", { required: true })}\n                type=\"text\"\n                id=\"lastName\"\n              />\n              <ErrorMessage\n                errors={errors}\n                name=\"lastName\"\n                message=\"Lastname is required\"\n                render={({ message }) => (\n                  <span className=\"error_message\">{message}</span>\n                )}\n              />\n\n              <div className=\"container-picker\">\n                <label for=\"birthDate\">Date of Birth</label>\n\n                <Controller\n                  name=\"birthDate\"\n                  defaultValue={null}\n                  control={control}\n                  render={({ field: { onChange, value } }) => (\n                    <DatePicker\n                      required\n                      name=\"birthDate\"\n                      selected={value}\n                      onChange={onChange}\n                      showYearDropdown\n                      peekNextMonth\n                      showMonthDropdown\n                      dropdownMode=\"select\"\n                    />\n                  )}\n                />\n              </div>\n              <div className=\"container-picker\">\n                <label for=\"startDate\">Start Date</label>\n\n                <Controller\n                  name=\"startDate\"\n                  defaultValue={null}\n                  control={control}\n                  render={({ field: { onChange, value } }) => (\n                    <DatePicker\n                      required\n                      selected={value}\n                      onChange={onChange}\n                      showYearDropdown\n                      peekNextMonth\n                      showMonthDropdown\n                      dropdownMode=\"select\"\n                    />\n                  )}\n                />\n              </div>\n              <img src={employee} alt=\"employee\" />\n            </div>\n\n            <div className=\"right_form_container\" ref={rightforms}>\n              <fieldset class=\"address\">\n                <legend>Address</legend>\n\n                <label for=\"street\">Street</label>\n                <input\n                  {...register(\"street\", { required: true })}\n                  id=\"street\"\n                  name=\"street\"\n                  type=\"text\"\n                />\n                <ErrorMessage\n                  errors={errors}\n                  name=\"street\"\n                  message=\"Street is required\"\n                  render={({ message }) => (\n                    <span className=\"error_message\">{message}</span>\n                  )}\n                />\n\n                <label for=\"city\">City</label>\n                <input\n                  {...register(\"city\", { required: true })}\n                  id=\"city\"\n                  type=\"text\"\n                />\n                <ErrorMessage\n                  errors={errors}\n                  name=\"city\"\n                  message=\"City is required\"\n                  render={({ message }) => (\n                    <span className=\"error_message\">{message}</span>\n                  )}\n                />\n\n                <label for=\"states\">States</label>\n                <Controller\n                  control={control}\n                  name=\"states\"\n                  defaultValue={states[0].value}\n                  render={({ field: { onChange, value, ref } }) => (\n                    <Select\n                      inputRef={ref}\n                      styles={customStyles}\n                      options={states}\n                      value={states.find((c) => c.value === value)}\n                      onChange={(val) => onChange(val.value)}\n                    />\n                  )}\n                />\n\n                <label for=\"zipCode\">Zip Code</label>\n                <input\n                  {...register(\"zipCode\", { required: true })}\n                  id=\"zip-code\"\n                  type=\"number\"\n                />\n                <ErrorMessage\n                  errors={errors}\n                  name=\"zipCode\"\n                  message=\"Zip code is required\"\n                  render={({ message }) => (\n                    <span className=\"error_message\">{message}</span>\n                  )}\n                />\n              </fieldset>\n\n              <label for=\"department\">Department</label>\n              <Controller\n                control={control}\n                name=\"department\"\n                defaultValue={department[0].value}\n                render={({ field: { onChange, value, ref } }) => (\n                  <Select\n                    inputRef={ref}\n                    styles={customStyles}\n                    options={department}\n                    value={department.find((c) => c.value === value)}\n                    onChange={(val) => onChange(val.value)}\n                  />\n                )}\n              />\n            </div>\n            <img\n              className=\"document_icons\"\n              ref={documentImg}\n              src={document}\n              alt=\"document icons\"\n            />\n          </div>\n          <button  ref={button}>\n            Save Employee\n          </button>\n        </form>\n        <Modal\n    close = {close}\n    open = {active}\n    showClose = {true}\n    modalContent=\" A new Employee is created !\"\n    styleButton = {customButton}\n    styleContent = {customContent}\n    out\n/>\n      </div>\n    </>\n  );\n};\n\nexport default FormsEmployee;\n"]},"metadata":{},"sourceType":"module"}
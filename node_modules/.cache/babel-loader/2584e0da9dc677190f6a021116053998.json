{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormsEmployee = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors,\n    setError,\n    control\n  } = useForm();\n\n  const createEmployee = data => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n    const employee = {\n      birthDate: data.birthDate,\n      city: data.city,\n      departement: data.departement,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      startDate: data.startDate,\n      states: data.states,\n      street: data.street,\n      zipCode: data.zipCode\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n    createEmployee(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        action: \"#\",\n        id: \"create-employee\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\"),\n          type: \"text\",\n          id: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\"),\n          type: \"text\",\n          id: \"last-name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"birthDate\",\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"birthDate\",\n            defaultValue: null,\n            control: control,\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n              placeholderText: \"Select BirthDay\",\n              selected: value,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-picker\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"startDate\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"startDate\",\n            defaultValue: null,\n            control: control,\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n              placeholderText: \"Select Start Date\",\n              selected: value,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          class: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"street\",\n            children: \"Street\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"street\"),\n            id: \"street\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"city\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\"),\n            id: \"city\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"city\",\n            children: \"States\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"states\",\n            render: ({\n              field: {\n                onChange,\n                value,\n                ref\n              }\n            }) => /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: states[0],\n              inputRef: ref,\n              styles: customStyles,\n              options: states,\n              value: states.find(c => c.abbreviation === states.abbreviation),\n              onChange: val => onChange(val.abbreviation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"zipCode\",\n            children: \"Zip Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"zipCode\"),\n            id: \"zip-code\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"department\",\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"departement\",\n          render: ({\n            field: {\n              onChange,\n              value,\n              ref\n            }\n          }) => /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: department[0],\n            inputRef: ref,\n            styles: customStyles,\n            options: department,\n            value: department.find(c => c.value === value),\n            onChange: val => onChange(val.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormsEmployee, \"rCVrEC5yZAc1/WUEOiqHMgId2OA=\", false, function () {\n  return [useForm];\n});\n\n_c = FormsEmployee;\nexport default FormsEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsEmployee\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx"],"names":["React","useForm","Controller","DatePicker","states","department","Select","customStyles","firebase","FormsEmployee","register","handleSubmit","formState","errors","setError","control","createEmployee","data","employeeDB","database","ref","employee","birthDate","city","departement","firstName","lastName","startDate","street","zipCode","push","onSubmit","console","log","field","onChange","value","find","c","abbreviation","val"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\n\nconst FormsEmployee = () => {\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors,\n    setError,\n    control,\n  } = useForm();\n\n  const createEmployee = (data) => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n\n    const employee = {\n      birthDate: data.birthDate,\n      city: data.city,\n      departement: data.departement,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      startDate: data.startDate,\n      states: data.states,\n      street: data.street,\n      zipCode: data.zipCode,\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = (data) => {\n    console.log(data)\n    createEmployee(data);\n  };\n\n  return (\n    <>\n      <div class=\"container\">\n        <h2>Create Employee</h2>\n        <form onSubmit={handleSubmit(onSubmit)} action=\"#\" id=\"create-employee\">\n          <label for=\"firstName\">First Name</label>\n          <input {...register(\"firstName\")} type=\"text\" id=\"firstName\" />\n\n          <label for=\"lastName\">Last Name</label>\n          <input {...register(\"lastName\")} type=\"text\" id=\"last-name\" />\n\n          <div className=\"container-picker\">\n            <label for=\"birthDate\">Date of Birth</label>\n\n            <Controller\n              name=\"birthDate\"\n              defaultValue={null}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <DatePicker\n                  placeholderText=\"Select BirthDay\"\n                  selected={value}\n                  onChange={onChange}\n                />\n              )}\n            />\n          </div>\n          <div className=\"container-picker\">\n            <label for=\"startDate\">Start Date</label>\n\n            <Controller\n              name=\"startDate\"\n              defaultValue={null}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <DatePicker\n                  placeholderText=\"Select Start Date\"\n                  selected={value}\n                  onChange={onChange}\n                />\n              )}\n            />\n          </div>\n\n          <fieldset class=\"address\">\n            <legend>Address</legend>\n\n            <label for=\"street\">Street</label>\n            <input {...register(\"street\")} id=\"street\" type=\"text\" />\n\n            <label for=\"city\">City</label>\n            <input {...register(\"city\")} id=\"city\" type=\"text\" />\n\n            <label for=\"city\">States</label>\n            <Controller\n              control={control}\n              name=\"states\"\n              render={({ field: { onChange, value, ref } }) => (\n                <Select\n                  defaultValue={states[0]}\n                  inputRef={ref}\n                  styles={customStyles}\n                  options={states}\n                  value={states.find(\n                    (c) => c.abbreviation === states.abbreviation\n                  )}\n                  onChange={(val) => onChange(val.abbreviation)}\n                />\n              )}\n            />\n\n            <label for=\"zipCode\">Zip Code</label>\n            <input {...register(\"zipCode\")} id=\"zip-code\" type=\"number\" />\n          </fieldset>\n\n          <label for=\"department\">Department</label>\n          <Controller\n            control={control}\n            name=\"departement\"\n            render={({ field: { onChange, value, ref } }) => (\n              <Select\n                defaultValue={department[0]}\n                inputRef={ref}\n                styles={customStyles}\n                options={department}\n                value={department.find((c) => c.value === value)}\n                onChange={(val) => onChange(val.value)}\n              />\n            )}\n          />\n\n          <button>Save</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default FormsEmployee;\n"]},"metadata":{},"sourceType":"module"}
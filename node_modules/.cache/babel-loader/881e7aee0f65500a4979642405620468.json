{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormsEmployee = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors,\n    setError,\n    control\n  } = useForm();\n\n  const createEmployee = inputData => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n    const employee = {\n      birthDate: inputData.birthDate.getFullYear(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      startDate: inputData.startDate.getDate(),\n      states: inputData.states,\n      street: inputData.street,\n      zipCode: inputData.zipCode\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n    createEmployee(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        action: \"#\",\n        id: \"create-employee\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"department\",\n          children: \"Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"department\",\n          render: ({\n            field: {\n              onChange,\n              value,\n              ref\n            }\n          }) => /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: department[0],\n            inputRef: ref,\n            styles: customStyles,\n            options: department,\n            value: department.find(c => c.value === value),\n            onChange: val => onChange(val.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left_form_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\"),\n            type: \"text\",\n            id: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"lastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\"),\n            type: \"text\",\n            id: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-picker\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"birthDate\",\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"birthDate\",\n              defaultValue: null,\n              control: control,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                }\n              }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                placeholderText: \"Select BirthDay\",\n                selected: value,\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-picker\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"startDate\",\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"startDate\",\n              defaultValue: null,\n              control: control,\n              render: ({\n                field: {\n                  onChange,\n                  value\n                }\n              }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                placeholderText: \"Select Start Date\",\n                selected: value,\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right_form_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            class: \"address\",\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"street\",\n              children: \"Street\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"street\"),\n              id: \"street\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"city\",\n              children: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\"),\n              id: \"city\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"states\",\n              children: \"States\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"states\",\n              render: ({\n                field: {\n                  onChange,\n                  value,\n                  ref\n                }\n              }) => /*#__PURE__*/_jsxDEV(Select, {\n                defaultValue: states[0],\n                inputRef: ref,\n                styles: customStyles,\n                options: states,\n                value: states.find(c => c.abbreviation === states.abbreviation),\n                onChange: val => onChange(val.abbreviation)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"zipCode\",\n              children: \"Zip Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"zipCode\"),\n              id: \"zip-code\",\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormsEmployee, \"rCVrEC5yZAc1/WUEOiqHMgId2OA=\", false, function () {\n  return [useForm];\n});\n\n_c = FormsEmployee;\nexport default FormsEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsEmployee\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx"],"names":["React","useForm","Controller","DatePicker","states","department","Select","customStyles","firebase","FormsEmployee","register","handleSubmit","formState","errors","setError","control","createEmployee","inputData","employeeDB","database","ref","employee","birthDate","getFullYear","city","firstName","lastName","startDate","getDate","street","zipCode","push","onSubmit","data","console","log","field","onChange","value","find","c","val","abbreviation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\n\nconst FormsEmployee = () => {\n  const {\n    register,\n    handleSubmit,\n    formState,\n    errors,\n    setError,\n    control,\n  } = useForm();\n\n  const createEmployee = (inputData) => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n\n    const employee = {\n      birthDate: inputData.birthDate.getFullYear(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      startDate: inputData.startDate.getDate(),\n      states: inputData.states,\n      street: inputData.street,\n      zipCode: inputData.zipCode,\n    };\n    employeeDB.push(employee);\n  };\n\n\n\n  const onSubmit = (data) => {\n    console.log(data)\n   createEmployee(data)\n \n  }\n  \n\n\n  return (\n    <>\n      <div class=\"container\">\n  \n     <form onSubmit={handleSubmit(onSubmit)} action=\"#\" id=\"create-employee\">\n     <label for=\"department\">Department</label>\n          <Controller\n            control={control}\n            name=\"department\"\n            render={({ field: { onChange, value, ref } }) => (\n              <Select\n                defaultValue={department[0]}\n                inputRef={ref}\n                styles={customStyles}\n                options={department}\n                value={department.find((c) => c.value === value)}\n                onChange={(val) => onChange(val.value)}\n              />\n            )}\n          />\n        <div className=\"left_form_container\">\n          <label for=\"firstName\">First Name</label>\n          <input {...register(\"firstName\")} type=\"text\" id=\"firstName\" />\n\n          <label for=\"lastName\">Last Name</label>\n          <input {...register(\"lastName\")} type=\"text\" id=\"lastName\" />\n\n          <div className=\"container-picker\">\n            <label for=\"birthDate\">Date of Birth</label>\n\n            <Controller\n              name=\"birthDate\"\n              defaultValue={null}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <DatePicker\n                  placeholderText=\"Select BirthDay\"\n                  selected={value}\n                  onChange={onChange}\n                />\n              )}\n            />\n          </div>\n          <div className=\"container-picker\">\n            <label for=\"startDate\">Start Date</label>\n\n            <Controller\n              name=\"startDate\"\n              defaultValue={null}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <DatePicker\n                  placeholderText=\"Select Start Date\"\n                  selected={value}\n                  onChange={onChange}\n                />\n              )}\n            />\n          </div>\n         \n          </div>\n          <div className=\"right_form_container\">\n          <fieldset class=\"address\">\n            <legend>Address</legend>\n\n            <label for=\"street\">Street</label>\n            <input {...register(\"street\")} id=\"street\" type=\"text\" />\n\n            <label for=\"city\">City</label>\n            <input {...register(\"city\")} id=\"city\" type=\"text\" />\n\n            <label for=\"states\">States</label>\n            <Controller\n              control={control}\n              name=\"states\"\n              render={({ field: { onChange, value, ref } }) => (\n                <Select\n                  defaultValue={states[0]}\n                  inputRef={ref}\n                  styles={customStyles}\n                  options={states}\n                  value={states.find(\n                    (c) => c.abbreviation === states.abbreviation\n                  )}\n                  onChange={(val) => onChange(val.abbreviation)}\n                />\n              )}\n            />\n\n            <label for=\"zipCode\">Zip Code</label>\n            <input {...register(\"zipCode\")} id=\"zip-code\" type=\"number\" />\n          </fieldset>\n\n         \n\n          <button>Save</button>\n          \n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default FormsEmployee;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\nimport gsap from \"gsap\";\nimport employee from \"../assets/images/employee.png\";\nimport document from \"../assets/images/document.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormsEmployee = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm();\n\n  const createEmployee = inputData => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n    const employee = {\n      birthDate: inputData.birthDate.getFullYear(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      startDate: inputData.startDate.getDate(),\n      states: inputData.states.va,\n      street: inputData.street,\n      zipCode: inputData.zipCode\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = data => {\n    console.log(data);\n    createEmployee(data);\n  }; // animation forms\n\n\n  const leftforms = useRef(null);\n  const rightforms = useRef(null);\n  const button = useRef(null);\n  const documentImg = useRef(null);\n  useEffect(() => {\n    gsap.from(leftforms.current, {\n      x: \"-250%\",\n      delay: 1,\n      duration: 1\n    });\n    gsap.from(rightforms.current, {\n      x: \"250%\",\n      delay: 1,\n      duration: 1\n    });\n    gsap.from(button.current, {\n      y: \"-250%\",\n      delay: 1,\n      duration: 1\n    });\n    gsap.to(documentImg.current, {\n      delay: 3,\n      y: \"500px\",\n      duration: 3\n    });\n    gsap.to(documentImg.current, {\n      delay: 6,\n      x: \"-520px\",\n      duration: 3,\n      opacity: 0\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        action: \"#\",\n        id: \"create-employee\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: leftforms,\n            className: \"left_form_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"firstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n                required: true\n              }),\n              type: \"text\",\n              id: \"firstName\",\n              name: \"firstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"firstName\",\n              message: \"Firstname is required\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_message\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"lastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n                required: true\n              }),\n              type: \"text\",\n              id: \"lastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"lastName\",\n              message: \"Lastname is required\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_message\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"birthDate\",\n                children: \"Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"birthDate\",\n                defaultValue: null,\n                control: control,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  }\n                }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                  required: true,\n                  name: \"birthDate\",\n                  selected: value,\n                  onChange: onChange,\n                  showYearDropdown: true,\n                  peekNextMonth: true,\n                  showMonthDropdown: true,\n                  dropdownMode: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"startDate\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"startDate\",\n                defaultValue: null,\n                control: control,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  }\n                }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                  required: true,\n                  selected: value,\n                  onChange: onChange,\n                  showYearDropdown: true,\n                  peekNextMonth: true,\n                  showMonthDropdown: true,\n                  dropdownMode: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: employee,\n              alt: \"employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right_form_container\",\n            ref: rightforms,\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              class: \"address\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"street\",\n                children: \"Street\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"street\", {\n                  required: true\n                }),\n                id: \"street\",\n                name: \"street\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                errors: errors,\n                name: \"street\",\n                message: \"Street is required\",\n                render: ({\n                  message\n                }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_message\",\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"city\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\", {\n                  required: true\n                }),\n                id: \"city\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                errors: errors,\n                name: \"city\",\n                message: \"City is required\",\n                render: ({\n                  message\n                }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_message\",\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"states\",\n                children: \"States\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: \"states\",\n                defaultValue: states[0].value,\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(Select, {\n                  inputRef: ref,\n                  styles: customStyles,\n                  options: states,\n                  value: states.find(c => c.value === value),\n                  onChange: val => onChange(val.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"zipCode\",\n                children: \"Zip Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"zipCode\", {\n                  required: true\n                }),\n                id: \"zip-code\",\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                errors: errors,\n                name: \"street\",\n                message: \"Zip code is required\",\n                render: ({\n                  message\n                }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error_message\",\n                  children: message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 44\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"department\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"department\",\n              defaultValue: department[0].value,\n              render: ({\n                field: {\n                  onChange,\n                  value,\n                  ref\n                }\n              }) => /*#__PURE__*/_jsxDEV(Select, {\n                inputRef: ref,\n                styles: customStyles,\n                options: department,\n                value: department.find(c => c.value === value),\n                onChange: val => onChange(val.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"document_icons\",\n            ref: documentImg,\n            src: document,\n            alt: \"document icons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: button,\n          children: \"Save Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormsEmployee, \"edHltKIIM2EdYMRzChMWkjXkeZ4=\", false, function () {\n  return [useForm];\n});\n\n_c = FormsEmployee;\nexport default FormsEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsEmployee\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx"],"names":["React","useEffect","useRef","useForm","Controller","ErrorMessage","DatePicker","states","department","Select","customStyles","firebase","gsap","employee","document","FormsEmployee","register","handleSubmit","formState","errors","control","createEmployee","inputData","employeeDB","database","ref","birthDate","getFullYear","city","firstName","lastName","startDate","getDate","va","street","zipCode","push","onSubmit","data","console","log","leftforms","rightforms","button","documentImg","from","current","x","delay","duration","y","to","opacity","required","message","field","onChange","value","find","c","val"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\nimport gsap from \"gsap\";\nimport employee from \"../assets/images/employee.png\";\nimport document from \"../assets/images/document.png\";\n\nconst FormsEmployee = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n\n    control,\n  } = useForm();\n\n  const createEmployee = (inputData) => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n\n    const employee = {\n      birthDate: inputData.birthDate.getFullYear(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      startDate: inputData.startDate.getDate(),\n      states: inputData.states.va,\n      street: inputData.street,\n      zipCode: inputData.zipCode,\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = (data) => {\n    console.log(data)\n    createEmployee(data);\n  };\n\n  // animation forms\n  const leftforms = useRef(null);\n  const rightforms = useRef(null);\n  const button = useRef(null);\n  const documentImg = useRef(null);\n\n  useEffect(() => {\n    gsap.from(leftforms.current, {\n      x: \"-250%\",\n      delay: 1,\n      duration: 1,\n    });\n\n    gsap.from(rightforms.current, {\n      x: \"250%\",\n      delay: 1,\n      duration: 1,\n    });\n    gsap.from(button.current, {\n      y: \"-250%\",\n      delay: 1,\n      duration: 1,\n    });\n    gsap.to(documentImg.current, {\n      delay: 3,\n      y: \"500px\",\n      duration: 3,\n    });\n    gsap.to(documentImg.current, {\n      delay: 6,\n      x: \"-520px\",\n      duration: 3,\n      opacity: 0,\n    });\n  }, []);\n\n  return (\n    <>\n      <div class=\"container\">\n        <form onSubmit={handleSubmit(onSubmit)} action=\"#\" id=\"create-employee\">\n          <div className=\"container_form\">\n            <div ref={leftforms} className=\"left_form_container\">\n              <label for=\"firstName\">First Name</label>\n              <input\n                {...register(\"firstName\", { required: true })}\n                type=\"text\"\n                id=\"firstName\"\n                name=\"firstName\"\n              />\n              <ErrorMessage\n                errors={errors}\n                name=\"firstName\"\n                message=\"Firstname is required\"\n\n                  render={({ message }) => <span className='error_message'>{message}</span>}\n              />\n\n              <label for=\"lastName\">Last Name</label>\n              <input\n                {...register(\"lastName\", { required: true })}\n                type=\"text\"\n                id=\"lastName\"\n              />\n              <ErrorMessage\n                errors={errors}\n                name=\"lastName\"\n                message=\"Lastname is required\"\n                render={({ message }) => <span className='error_message'>{message}</span>}\n              />\n\n              <div className=\"container-picker\">\n                <label for=\"birthDate\">Date of Birth</label>\n\n                <Controller\n                  name=\"birthDate\"\n                  defaultValue={null}\n                  control={control}\n                  render={({ field: { onChange, value } }) => (\n                    <DatePicker\n                    required\n                      name='birthDate'\n                      selected={value}\n                      onChange={onChange}\n                      showYearDropdown\n                      peekNextMonth\n                      showMonthDropdown\n                      dropdownMode=\"select\"\n                    />\n                  )}\n                />\n              </div>\n              <div className=\"container-picker\">\n                <label for=\"startDate\">Start Date</label>\n\n                <Controller\n                  name=\"startDate\"\n                  defaultValue={null}\n                  control={control}\n                  render={({ field: { onChange, value } }) => (\n                    <DatePicker\n                      required\n                      selected={value}\n                      onChange={onChange}\n                      showYearDropdown\n                      peekNextMonth\n                      showMonthDropdown\n                      dropdownMode=\"select\"\n                    />\n                  )}\n                />\n              </div>\n              <img src={employee} alt=\"employee\" />\n            </div>\n\n            <div className=\"right_form_container\" ref={rightforms}>\n              <fieldset class=\"address\">\n                <legend>Address</legend>\n\n                <label for=\"street\">Street</label>\n                <input {...register(\"street\",{ required: true })} id=\"street\" name='street' type=\"text\" />\n                <ErrorMessage\n                  errors={errors}\n                  name=\"street\"\n                  message='Street is required'\n                  render={({ message }) => <span className='error_message'>{message}</span>}\n                />\n\n                <label for=\"city\">City</label>\n                <input {...register(\"city\", { required: true })} id=\"city\" type=\"text\" />\n                <ErrorMessage\n                  errors={errors}\n                  name=\"city\"\n                  message='City is required'\n                  render={({ message }) => <span className='error_message'>{message}</span>}\n                />\n\n                <label for=\"states\">States</label>\n                <Controller\n                  control={control}\n                  name=\"states\"\n                  defaultValue={states[0].value}\n                  render={({ field: { onChange, value, ref } }) => (\n                    <Select\n                      inputRef={ref}\n                      styles={customStyles}\n                      options={states}\n                      value={states.find((c) => c.value === value )}\n                      onChange={(val) => onChange(val.value)}\n                    />\n                  )}\n                />\n                \n                <label for=\"zipCode\">Zip Code</label>\n                <input {...register(\"zipCode\", {required:true})} id=\"zip-code\" type=\"number\" />\n                <ErrorMessage\n                  errors={errors}\n                  name=\"street\"\n                  message='Zip code is required'\n                  render={({ message }) => <span className='error_message'>{message}</span>}\n                />\n              </fieldset>\n\n              <label for=\"department\">Department</label>\n              <Controller\n                control={control}\n                name=\"department\"\n                defaultValue={department[0].value}\n                render={({ field: { onChange, value, ref } }) => (\n                  <Select\n                    inputRef={ref}\n                    styles={customStyles}\n                    options={department}\n                    value={department.find((c) => c.value === value)}\n                    onChange={(val) => onChange(val.value)}\n                  />\n                )}\n              />\n            </div>\n            <img\n              className=\"document_icons\"\n              ref={documentImg}\n              src={document}\n              alt=\"document icons\"\n            />\n          </div>\n          <button ref={button}>Save Employee</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default FormsEmployee;\n"]},"metadata":{},"sourceType":"module"}
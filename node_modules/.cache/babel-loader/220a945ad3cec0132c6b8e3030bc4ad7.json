{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/Pages/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport logo from \"../assets/images/logo2.png\";\nimport firebase from \"../utils/firebaseConfig\";\nimport { AuthContext } from \"../utils/AuthProvider\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  // react-hook-forms\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); // login with firebase\n\n  const onSubmitLogin = data => {\n    console.log(data);\n    firebase.auth().signInWithEmailAndPassword(data.username, data.password).then(userCredential => {\n      // Signed in\n      const userLogin = userCredential.user;\n      console.log(userLogin);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  if (currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo-login\",\n        src: logo,\n        alt: \"logo de Hrnet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmitLogin),\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-login-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"username\", {\n                required: true\n              }),\n              type: \"text\",\n              id: \"username\",\n              name: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"username\",\n              message: \"Username is required\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_message\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-login-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n                required: true\n              }),\n              type: \"password\",\n              id: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"password\",\n              message: \"Password is required\",\n              render: ({\n                message\n              }) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error_message\",\n                children: message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login-btn\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"+wMBk8UstzFs3JahFxD0AMWuLGA=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/Pages/Login.jsx"],"names":["React","useContext","useEffect","useRef","useState","useForm","Controller","ErrorMessage","logo","firebase","AuthContext","Redirect","Login","register","handleSubmit","formState","errors","onSubmitLogin","data","console","log","auth","signInWithEmailAndPassword","username","password","then","userCredential","userLogin","user","catch","error","currentUser","required","message"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport logo from \"../assets/images/logo2.png\";\nimport firebase from \"../utils/firebaseConfig\";\nimport { AuthContext } from \"../utils/AuthProvider\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Login = () => {\n  // react-hook-forms\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  // login with firebase\n  const onSubmitLogin = (data) => {\n    console.log(data);\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(data.username, data.password)\n      .then((userCredential) => {\n        // Signed in\n        const userLogin = userCredential.user;\n        console.log(userLogin);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <>\n      {/* {userLogin && <span>'je suis connecter'</span>} */}\n      <div className=\"wrapper-login\">\n        <img className=\"logo-login\" src={logo} alt=\"logo de Hrnet\" />\n        <form\n          onSubmit={handleSubmit(onSubmitLogin)}\n          className=\"login-container\"\n        >\n          <div className=\"header\">Login</div>\n          <div className=\"box\">\n            <div className=\"input-login-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                {...register(\"username\", { required: true })}\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n              />\n              <ErrorMessage\n                errors={errors}\n                name=\"username\"\n                message=\"Username is required\"\n                render={({ message }) => (\n                  <span className=\"error_message\">{message}</span>\n                )}\n              />\n            </div>\n\n            <div className=\"input-login-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                {...register(\"password\", { required: true })}\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n              />\n              <ErrorMessage\n                errors={errors}\n                name=\"password\"\n                message=\"Password is required\"\n                render={({ message }) => (\n                  <span className=\"error_message\">{message}</span>\n                )}\n              />\n            </div>\n\n            <button className=\"login-btn\">Login</button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
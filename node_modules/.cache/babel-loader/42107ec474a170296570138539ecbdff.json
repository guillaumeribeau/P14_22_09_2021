{"ast":null,"code":"var _jsxFileName = \"/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from '@hookform/error-message';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\nimport gsap from \"gsap\";\nimport employee from \"../assets/images/employee.png\";\nimport document from \"../assets/images/document.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FormsEmployee = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm();\n\n  const createEmployee = inputData => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n    const employee = {\n      birthDate: inputData.birthDate.getFullYear(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      startDate: inputData.startDate.getDate(),\n      states: inputData.states,\n      street: inputData.street,\n      zipCode: inputData.zipCode\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = data => {\n    createEmployee(data);\n  }; // animation forms\n\n\n  const leftforms = useRef(null);\n  const rightforms = useRef(null);\n  const button = useRef(null);\n  const documentImg = useRef(null);\n  useEffect(() => {\n    gsap.from(leftforms.current, {\n      x: \"-250%\",\n      delay: 1,\n      duration: 1\n    });\n    gsap.from(rightforms.current, {\n      x: \"250%\",\n      delay: 1,\n      duration: 1\n    });\n    gsap.from(button.current, {\n      y: \"-250%\",\n      delay: 1,\n      duration: 1\n    });\n    gsap.to(documentImg.current, {\n      delay: 3,\n      y: \"500px\",\n      duration: 3\n    });\n    gsap.to(documentImg.current, {\n      delay: 6,\n      x: \"-520px\",\n      duration: 3,\n      opacity: 0\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        action: \"#\",\n        id: \"create-employee\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: leftforms,\n            className: \"left_form_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"firstName\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\", {\n                required: true\n              }),\n              type: \"text\",\n              id: \"firstName\",\n              name: \"firstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"firstName\",\n              message: \"Firstname is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"lastName\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"lastName\", {\n                required: true\n              }),\n              type: \"text\",\n              id: \"lastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              errors: errors,\n              name: \"lastName\",\n              message: \"Lastname is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"birthDate\",\n                children: \"Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"birthDate\",\n                defaultValue: null,\n                control: control,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  }\n                }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                  selected: value,\n                  onChange: onChange,\n                  showYearDropdown: true,\n                  peekNextMonth: true,\n                  showMonthDropdown: true,\n                  dropdownMode: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-picker\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"startDate\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"startDate\",\n                defaultValue: null,\n                control: control,\n                render: ({\n                  field: {\n                    onChange,\n                    value\n                  }\n                }) => /*#__PURE__*/_jsxDEV(DatePicker, {\n                  selected: value,\n                  onChange: onChange,\n                  showYearDropdown: true,\n                  peekNextMonth: true,\n                  showMonthDropdown: true,\n                  dropdownMode: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: employee,\n              alt: \"employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right_form_container\",\n            ref: rightforms,\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              class: \"address\",\n              children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"city\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"city\"),\n                id: \"city\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"street\",\n                children: \"Street\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"street\"),\n                id: \"street\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"states\",\n                children: \"States\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                control: control,\n                name: \"states\",\n                render: ({\n                  field: {\n                    onChange,\n                    value,\n                    ref\n                  }\n                }) => /*#__PURE__*/_jsxDEV(Select, {\n                  inputRef: ref,\n                  styles: customStyles,\n                  options: states,\n                  value: states.find(c => c.abbreviation === states.abbreviation),\n                  onChange: val => onChange(val.abbreviation)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"zipCode\",\n                children: \"Zip Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"zipCode\"),\n                id: \"zip-code\",\n                type: \"number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"department\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              control: control,\n              name: \"department\",\n              render: ({\n                field: {\n                  onChange,\n                  value,\n                  ref\n                }\n              }) => /*#__PURE__*/_jsxDEV(Select, {\n                inputRef: ref,\n                styles: customStyles,\n                options: department,\n                value: department.find(c => c.value === value),\n                onChange: val => onChange(val.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"document_icons\",\n            ref: documentImg,\n            src: document,\n            alt: \"document icons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: button,\n          children: \"Save Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormsEmployee, \"IgaO/IW5jJCf/VZoHNvB9SPBO2o=\", false, function () {\n  return [useForm];\n});\n\n_c = FormsEmployee;\nexport default FormsEmployee;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormsEmployee\");","map":{"version":3,"sources":["/Users/guillaume/desktop-tutorial/P14_22_09_2021/src/components/FormsEmployee.jsx"],"names":["React","useEffect","useRef","useForm","Controller","ErrorMessage","DatePicker","states","department","Select","customStyles","firebase","gsap","employee","document","FormsEmployee","register","handleSubmit","formState","errors","control","createEmployee","inputData","employeeDB","database","ref","birthDate","getFullYear","city","firstName","lastName","startDate","getDate","street","zipCode","push","onSubmit","data","leftforms","rightforms","button","documentImg","from","current","x","delay","duration","y","to","opacity","required","field","onChange","value","find","c","abbreviation","val"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ErrorMessage } from '@hookform/error-message';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport states from \"../data/States\";\nimport department from \"../data/Department\";\nimport Select from \"react-select\";\nimport customStyles from \"./SelectStyle\";\nimport firebase from \"../utils/firebaseConfig\";\nimport gsap from \"gsap\";\nimport employee from \"../assets/images/employee.png\"\nimport document from \"../assets/images/document.png\"\n\n\nconst FormsEmployee = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n   \n    control,\n  } = useForm();\n\n  const createEmployee = (inputData) => {\n    const employeeDB = firebase.database().ref(\"create-employee\");\n\n    const employee = {\n      birthDate: inputData.birthDate.getFullYear(),\n      city: inputData.city,\n      department: inputData.department,\n      firstName: inputData.firstName,\n      lastName: inputData.lastName,\n      startDate: inputData.startDate.getDate(),\n      states: inputData.states,\n      street: inputData.street,\n      zipCode: inputData.zipCode,\n    };\n    employeeDB.push(employee);\n  };\n\n  const onSubmit = (data) => {\n    createEmployee(data);\n  };\n\n  // animation forms\n  const leftforms = useRef(null);\n  const rightforms = useRef(null);\n  const button = useRef(null);\n  const documentImg = useRef(null);\n \n  useEffect(() => {\n\n    gsap.from(leftforms.current, {\n      x: \"-250%\",\n      delay: 1,\n      duration: 1,\n    });\n\n    gsap.from(rightforms.current, {\n      x: \"250%\",\n      delay: 1,\n      duration: 1,\n    });\n    gsap.from(button.current, {\n      y: \"-250%\",\n      delay: 1,\n      duration: 1,\n    });\n     gsap.to(documentImg.current, {\n       delay:3,\n      y:\"500px\",\n      duration:3,\n      })\n      gsap.to(documentImg.current, {\n        delay:6,\n        x:\"-520px\",\n        duration:3,\n        opacity:0,\n        })\n\n  \n      },[]);\n \n\n  return (\n    <>\n      <div class=\"container\">\n        <form onSubmit={handleSubmit(onSubmit)} action=\"#\" id=\"create-employee\">\n          <div className=\"container_form\">\n            <div ref={leftforms} className=\"left_form_container\">\n              <label for=\"firstName\">First Name</label>\n              <input {...register(\"firstName\",{required:true})} type=\"text\" id=\"firstName\" name='firstName' />\n              <ErrorMessage errors={errors} name=\"firstName\" message='Firstname is required'/>\n\n              <label for=\"lastName\">Last Name</label>\n              <input {...register(\"lastName\",{required:true})} type=\"text\" id=\"lastName\" />\n              <ErrorMessage errors={errors} name=\"lastName\" message='Lastname is required'/>\n\n              <div className=\"container-picker\">\n                <label for=\"birthDate\">Date of Birth</label>\n\n                <Controller\n                  name=\"birthDate\"\n                  defaultValue={null}\n                  control={control}\n                  render={({ field: { onChange, value } }) => (\n                    <DatePicker\n                      selected={value}\n                      onChange={onChange}\n                      showYearDropdown\n                      peekNextMonth\n                      showMonthDropdown\n                      dropdownMode=\"select\"\n                    />\n                  )}\n                />\n              </div>\n              <div className=\"container-picker\">\n                <label for=\"startDate\">Start Date</label>\n\n                <Controller\n                  name=\"startDate\"\n                  defaultValue={null}\n                  control={control}\n                  render={({ field: { onChange, value } }) => (\n                    <DatePicker\n                      selected={value}\n                      onChange={onChange}\n                      showYearDropdown\n                      peekNextMonth\n                      showMonthDropdown\n                      dropdownMode=\"select\"\n                    />\n                  )}\n                />\n              </div>\n             <img src={employee} alt='employee'/>\n            </div>\n     \n            <div className=\"right_form_container\" ref={rightforms}>\n              <fieldset class=\"address\">\n                <legend>Address</legend>\n<label for=\"city\">City</label>\n                <input {...register(\"city\")} id=\"city\" type=\"text\" />\n\n                <label for=\"street\">Street</label>\n                <input {...register(\"street\")} id=\"street\" type=\"text\" />\n\n                \n                <label for=\"states\">States</label>\n                <Controller\n                  control={control}\n                  name=\"states\"\n                  render={({ field: { onChange, value, ref } }) => (\n                    <Select\n                      inputRef={ref}\n                      styles={customStyles}\n                      options={states}\n                      value={states.find(\n                        (c) => c.abbreviation === states.abbreviation\n                      )}\n                      onChange={(val) => onChange(val.abbreviation)}\n                    />\n                  )}\n                />\n\n                <label for=\"zipCode\">Zip Code</label>\n                <input {...register(\"zipCode\")} id=\"zip-code\" type=\"number\" />\n              </fieldset>\n\n              <label for=\"department\">Department</label>\n              <Controller\n                control={control}\n                name=\"department\"\n                render={({ field: { onChange, value, ref } }) => (\n                  <Select\n                    inputRef={ref}\n                    styles={customStyles}\n                    options={department}\n                    value={department.find((c) => c.value === value)}\n                    onChange={(val) => onChange(val.value)}\n                  />\n                )}\n              />\n            </div>\n            <img className=\"document_icons\" ref={documentImg} src={document} alt=\"document icons\" />\n          </div>\n          <button ref={button}>Save Employee</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default FormsEmployee;\n"]},"metadata":{},"sourceType":"module"}